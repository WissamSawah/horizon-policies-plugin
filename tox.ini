[tox]
minversion = 2.3.2
envlist = py36,py3-dev,py36-local,pep8,eslint,karma,karma-local
skipsdist = True

[testenv]
usedevelop = True
basepython = python3
install_command = pip install -U {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   NOSE_WITH_OPENSTACK=1
   NOSE_OPENSTACK_COLOR=1
   NOSE_OPENSTACK_RED=0.05
   NOSE_OPENSTACK_YELLOW=0.025
   NOSE_OPENSTACK_SHOW_ELAPSED=1
whitelist_externals = find
deps =  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
        -r{toxinidir}/requirements.txt
        -r{toxinidir}/test-requirements.txt
commands = python manage.py test

# For installation of horizon on local
# NOTICE: this tox.ini requires horizon repository cloned in sibling directory.
[testenv:hz-local]
commands =
  pip install -e ../horizon

[testenv:py3-dev]
commands =
  pip install {env:HORIZON_REPO:git+https://opendev.org/openstack/horizon}
  {[testenv]commands}

# NOTE(shu-mutow): On CI infra, horizon will be installed
# according to job setting. but on local, we need to install
# horizon from master branch.
[testenv:py36-local]
basepython = python3.6
commands =
  {[testenv:hz-local]commands}
  {[testenv]commands}

[testenv:pep8]
commands = flake8

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:eslint]
whitelist_externals =
  npm
commands =
  npm install
  npm run lint

# NOTE(shu-mutow): The "postinstall" script on package.json will install horizon
# from master branch into karma environment with python3.x for testing javascripts.
# Horizon from master is needed to be cloned into ../horizon on both local and CI.
[testenv:karma]
whitelist_externals =
  {[testenv:eslint]whitelist_externals}
commands =
  npm install
  npm run test

[testenv:karma-local]
whitelist_externals =
  {[testenv:eslint]whitelist_externals}
commands =
  {[testenv:karma]commands}

[testenv:npm]
passenv =
  HOME
  DISPLAY
  CHROME_BIN
commands =
  nodeenv -p
  npm install
  npm run {posargs:test}

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
show-source = True
ignore = E123,E125
builtins = _
exclude=.venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build
